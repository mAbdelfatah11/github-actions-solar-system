name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          if: ${{ always() }}                  # do this step of archiving the test result whatever happens to the previous step, failure or success
          with:
            name: Mocha-Test-Result           # test result helps in defineing which test case fails while testing
            path: test-results.xml      # path of the file to be uploaded for archiving, it will be uploaded to the github backend storage not a virtual machine 

    code-coverage:
      name: code-coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 18
  
      - name: Install Dependencies
        run: npm install
  
      - name: coverage
        continue-on-error: true
        run: npm run coverage      # excutes a test coverage check against code and evaluates number of lines against configured one
        
      - uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result          # test result helps in defineing which test case fails while testing
          path: coverage      # path of the file to be uploaded for archiving, it will be uploaded to the github backend storage not a virtual machine 
          retention-days: 5 
    
    docker:
        name: docker
        runs-on: ubuntu-latest

    dev-deploy:
      name: dev-deploy
      needs: docker
      environment:
        name: development
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: install kubectl
        uses: azure/setup-kubectl
        with:
          version: 'v1.26.0' # equal to EKS-Cluster k8s version
      - uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      
      - name: verify connection to k8s cluster
        run: | 
          kubectl version --short -o yaml

